@component MyComponent {
  @state {
    items = ["Item 1", "Item 2", "Item 3"];
    condition = true;
    user = { isLoggedIn: true, role: "admin", permissions: ["edit", "delete"] };
    status = "active";
    count = 0;
  }

  @prop title: "Default Title";

  @onMounted {
    console.log("Component mounted");
  }

  @template  {
    @for category in categories {
      <div class="category">{category.name}</div>
      @for item in category.items {
        <div class="item">
          {item.name}
          @if item.available {
            <span>사용 가능</span>
          } @else {
            <span>사용 불가</span>
          }
        </div>
      }
    }

    @if user.isLoggedIn && user.role === "admin" {
      <p>관리자로 로그인했습니다.</p>
      @if user.permissions.includes("edit") {
        <button>수정</button>
      }
      @if user.permissions.includes("delete") {
        <button>삭제</button>
      }
    } @else {
      <p>로그인이 필요합니다.</p>
    }

    @switch user.status {
      @case "active":
        <p>활성 사용자입니다.</p>
        @if user.activity > 100 {
          <p>활동이 매우 높습니다.</p>
        }
      @case "inactive":
        <p>비활성 사용자입니다.</p>
      @default:
        <p>사용자 상태를 확인할 수 없습니다.</p>
    }

    @while count < 10 {
      <p>카운트: {count}</p>
      @for i in range(1, 5) {
        <span>반복 {i}</span>
      }
      {
        count++;
      }
    }
  }

  @function incrementCount() {
    count++;
  }

  @style {
    .main {
      padding: 20px;
    }
  }
}